-- MySQL Script generated by MySQL Workbench
-- Fri Jun 30 17:24:20 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema access-control-component
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema access-control-component
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `access-control-component` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `access-control-component` ;

-- -----------------------------------------------------
-- Table `access-control-component`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`action` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `access-control-component`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`group` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `access-control-component`.`group_accesses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`group_accesses` (
  `id_group` INT(11) NOT NULL,
  `id_action` INT(11) NOT NULL,
  INDEX `id_group` (`id_group` ASC) VISIBLE,
  INDEX `id_action` (`id_action` ASC) VISIBLE,
  CONSTRAINT `group_accesses_ibfk_1`
    FOREIGN KEY (`id_group`)
    REFERENCES `access-control-component`.`group` (`id`),
  CONSTRAINT `group_accesses_ibfk_2`
    FOREIGN KEY (`id_action`)
    REFERENCES `access-control-component`.`action` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `access-control-component`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name` (`name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 13
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `access-control-component`.`group_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`group_members` (
  `id_user` INT(11) NOT NULL,
  `id_group` INT(11) NOT NULL,
  INDEX `id_user` (`id_user` ASC) VISIBLE,
  INDEX `id_group` (`id_group` ASC) VISIBLE,
  CONSTRAINT `group_members_ibfk_3`
    FOREIGN KEY (`id_user`)
    REFERENCES `access-control-component`.`user` (`id`)
    ON DELETE CASCADE,
  CONSTRAINT `group_members_ibfk_4`
    FOREIGN KEY (`id_group`)
    REFERENCES `access-control-component`.`group` (`id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;


-- -----------------------------------------------------
-- Table `access-control-component`.`users_information`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access-control-component`.`users_information` (
  `id_user` INT(11) NOT NULL,
  INDEX `id_user` (`id_user` ASC) VISIBLE,
  CONSTRAINT `users_information_ibfk_1`
    FOREIGN KEY (`id_user`)
    REFERENCES `access-control-component`.`user` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;

USE `access-control-component` ;

-- -----------------------------------------------------
-- procedure addUserToGroup
-- -----------------------------------------------------

DELIMITER $$
USE `access-control-component`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `addUserToGroup`(IN `id_user` INT, IN `id_target_group` INT)
BEGIN
    INSERT INTO group_members (id_user, id_group) VALUES (id_user, id_target_group);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure createUser
-- -----------------------------------------------------

DELIMITER $$
USE `access-control-component`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `createUser`(IN `name` VARCHAR(45), IN `password` VARCHAR(45))
BEGIN
    DECLARE id_user INT DEFAULT 0;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
        BEGIN
            ROLLBACK;
            RESIGNAL;
        END;

    START TRANSACTION;
        INSERT INTO user (name, password) VALUES (name, password);

        SET id_user = LAST_INSERT_ID();

        CALL addUserToGroup(id_user, 3);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure createUserNotSecure
-- -----------------------------------------------------

DELIMITER $$
USE `access-control-component`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `createUserNotSecure`(IN `name` VARCHAR(45), IN `password` VARCHAR(45))
BEGIN
    INSERT INTO user (name, password) VALUES (name, password);

    CALL addUserToGroup(10, 3);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure validate_user
-- -----------------------------------------------------

DELIMITER $$
USE `access-control-component`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `validate_user`(IN `username` VARCHAR(45), IN `password` VARCHAR(45))
BEGIN
    DECLARE userCount INT;

    SELECT COUNT(*) INTO userCount
    FROM user
    WHERE name = username AND password = password;

    IF userCount = 1 THEN
        SELECT 'User validated' AS result;
    ELSE
        SELECT 'Invalid credentials' AS result;
    END IF;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
